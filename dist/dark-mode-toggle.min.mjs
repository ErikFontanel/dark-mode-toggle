// Copyright 2019 Google LLC. Licensed under the Apache License, Version 2.0.
((a,b,c,d,e)=>{const f='light',g=(a,b,c=b)=>{Object.defineProperty(a,c,{enumerable:!0,get(){const a=this.getAttribute(b);return null===a?'':a},set(a){this.setAttribute(b,a)}})},h=(a,b,c=b)=>{Object.defineProperty(a,c,{enumerable:!0,get(){return this.hasAttribute(b)},set(a){a?this.setAttribute(b,''):this.removeAttribute(b)}})},i=b.createElement('template');i.innerHTML=`<style>*,::before,::after {box-sizing: border-box;}:host {contain: content;display: block;}:host([hidden]) {display: none;}form {background-color: var(--${'dark-mode-toggle'}-background-color, transparent);color: var(--${'dark-mode-toggle'}-color, inherit);padding: 0;}fieldset {border: none;}legend {font: var(--${'dark-mode-toggle'}-legend-font, inherit);padding: 0;}input,label {cursor: pointer;}label {padding: 0.15rem;}input {opacity: 0;position: absolute;pointer-events: none;}input:focus + label {outline: rgb(229, 151, 0) auto 2px;outline: -webkit-focus-ring-color auto 5px;}label::before {content: "";display: inline-block;background-size: 1rem;background-repeat: no-repeat;height: 1rem;width: 1rem;vertical-align: middle;margin: 0 0.5rem 0 0;}label[dir="rtl"]::before {margin: 0 0 0 0.5rem;}#lightLabel::before {background-image: var(--${'dark-mode-toggle'}-light-icon, none);}#darkLabel::before {filter: var(--${'dark-mode-toggle'}-icon-filter, none);background-image: var(--${'dark-mode-toggle'}-dark-icon, none);}#checkboxLabel::before {background-image: var(--${'dark-mode-toggle'}-checkbox-icon, none);}#permanentLabel::before {background-image: var(--${'dark-mode-toggle'}-remember-icon-unchecked, none);}#lightLabel,#darkLabel,#checkboxLabel {font: var(--${'dark-mode-toggle'}-label-font, inherit);}#permanentLabel {font: var(--${'dark-mode-toggle'}-remember-font, inherit);}input:checked + #permanentLabel::before {background-image: var(--${'dark-mode-toggle'}-remember-icon-checked, none);}input:checked + #darkLabel,input:checked + #lightLabel {background-color: var(--${'dark-mode-toggle'}-active-mode-background-color, transparent);}input:checked + #darkLabel::before,input:checked + #lightLabel::before {background-color: var(--${'dark-mode-toggle'}-active-mode-background-color, transparent);}input:checked + #checkboxLabel::before {filter: var(--${'dark-mode-toggle'}-icon-filter, none);}input:checked + #checkboxLabel + aside #permanentLabel::before {filter: var(--${'dark-mode-toggle'}-remember-filter, none);}aside {visibility: hidden;margin-top: 0.15rem;}#lightLabel:focus-visible ~ aside,#darkLabel:focus-visible ~ aside,#checkboxLabel:focus-visible ~ aside {visibility: visible;transition: visibility 0s;}@media (hover: hover) {aside {transition: visibility 3s;}aside:hover {visibility: visible;}#lightLabel:hover ~ aside,#darkLabel:hover ~ aside,#checkboxLabel:hover ~ aside {visibility: visible;transition: visibility 0s;}aside #permanentLabel:empty {display: none;}}</style><form><fieldset><legend></legend><input id="lightRadio" name="mode" type="radio"><label id="lightLabel" for="lightRadio"></label><input id="darkRadio" name="mode" type="radio"><label id="darkLabel" for="darkRadio"></label><input id="darkCheckbox" type="checkbox"><label id="checkboxLabel" for="darkCheckbox"></label><aside><input id="permanentCheckbox" type="checkbox"><label id="permanentLabel" for="permanentCheckbox"></label></aside></fieldset></form>`;class j extends HTMLElement{static get observedAttributes(){return['mode','appearance','permanent','legend',f,'dark','remember']}constructor(){super(),g(this,'mode'),g(this,'appearance'),g(this,'legend'),g(this,f),g(this,'dark'),g(this,'remember'),h(this,'permanent'),this._darkCSS=null,this._lightCSS=null,b.addEventListener('colorschemechange',a=>{this.mode=a.detail.colorScheme,this._updateRadios(),this._updateCheckbox()}),b.addEventListener('permanentcolorscheme',a=>{this.permanent=a.detail.permanent,this.permanentCheckbox.checked=this.permanent}),this._initializeDOM()}_initializeDOM(){const g=this.attachShadow({mode:'closed'});g.appendChild(i.content.cloneNode(!0)),this._darkCSS=b.querySelectorAll(`link[rel="stylesheet"][media="${d}"]`),this._darkCSS.forEach(a=>a.dataset.originalMedia=a.media),this._lightCSS=document.querySelectorAll(e.map(a=>`link[rel="stylesheet"][media*="${a}"]`).join(', ')),this._lightCSS.forEach(a=>a.dataset.originalMedia=a.media),this.lightRadio=g.querySelector('#lightRadio'),this.lightLabel=g.querySelector('#lightLabel'),this.darkRadio=g.querySelector('#darkRadio'),this.darkLabel=g.querySelector('#darkLabel'),this.darkCheckbox=g.querySelector('#darkCheckbox'),this.checkboxLabel=g.querySelector('#checkboxLabel'),this.legendLabel=g.querySelector('legend'),this.permanentAside=g.querySelector('aside'),this.permanentCheckbox=g.querySelector('#permanentCheckbox'),this.permanentLabel=g.querySelector('#permanentLabel'),this._lightIcon=a.getComputedStyle(this.lightLabel,':before').getPropertyValue('background-image'),this._darkIcon=a.getComputedStyle(this.darkLabel,':before').getPropertyValue('background-image');const h=a.matchMedia('(prefers-color-scheme)').matches,j=c.getItem('dark-mode-toggle');j&&['dark',f].includes(j)?(this.mode=j,this.permanentCheckbox.checked=!0,this.permanent=!0):h&&(a.matchMedia(e[0]).matches||a.matchMedia(e[1]).matches?this.mode=f:a.matchMedia(d).matches&&(this.mode='dark')),this.mode||(this.mode=f),this.permanent&&!j&&c.setItem('dark-mode-toggle',this.mode),this.appearance||(this.appearance='toggle'),this._updateAppearance(),this._updateRadios(),this._updateCheckbox(),[this.lightRadio,this.darkRadio].forEach(a=>{a.addEventListener('change',()=>{this.mode=this.lightRadio.checked?f:'dark',this._updateCheckbox(),this._dispatchEvent('colorschemechange',{colorScheme:this.mode})})}),this.darkCheckbox.addEventListener('change',()=>{this.mode=this.darkCheckbox.checked?'dark':f,this._updateRadios(),this._dispatchEvent('colorschemechange',{colorScheme:this.mode})}),this.permanentCheckbox.addEventListener('change',()=>{this.permanent=this.permanentCheckbox.checked,this._dispatchEvent('permanentcolorscheme',{permanent:this.permanent})}),this._updateMode(),this._dispatchEvent('colorschemechange',{colorScheme:this.mode}),this._dispatchEvent('permanentcolorscheme',{permanent:this.permanent})}attributeChangedCallback(b,d,e){if(b==='mode'){if(![f,'dark'].includes(e))throw new RangeError(`Allowed values: "${f}" and "${'dark'}".`);a.matchMedia('(hover: none)').matches&&this._showPermanentAside(),this.permanent&&c.setItem('dark-mode-toggle',this.mode),this._updateRadios(),this._updateCheckbox(),this._updateMode()}else if(b==='appearance'){if(!['toggle','switch'].includes(e))throw new RangeError('Allowed values: "${TOGGLE}" and "${SWITCH}".');this._updateAppearance()}else'permanent'===b?(this.permanent?c.setItem('dark-mode-toggle',this.mode):c.removeItem('dark-mode-toggle'),this.permanentCheckbox.checked=this.permanent):'legend'===b?this.legendLabel.textContent=e:'remember'===b?this.permanentLabel.textContent=e:b===f?(this.lightLabel.textContent=e,this.mode===f&&(this.checkboxLabel.textContent=e)):'dark'===b&&(this.darkLabel.textContent=e,'dark'===this.mode&&(this.checkboxLabel.textContent=e))}_dispatchEvent(a,b){this.dispatchEvent(new CustomEvent(a,{bubbles:!0,composed:!0,detail:b}))}_updateAppearance(){const a=this.appearance==='toggle';this.lightRadio.hidden=a,this.lightLabel.hidden=a,this.darkRadio.hidden=a,this.darkLabel.hidden=a,this.darkCheckbox.hidden=!a,this.checkboxLabel.hidden=!a}_updateRadios(){this.mode===f?this.lightRadio.checked=!0:this.darkRadio.checked=!0}_updateCheckbox(){this.mode===f?(this.checkboxLabel.style.setProperty(`--${'dark-mode-toggle'}-checkbox-icon`,this._lightIcon),this.checkboxLabel.textContent=this.light,this.darkCheckbox.checked=!1):(this.checkboxLabel.style.setProperty(`--${'dark-mode-toggle'}-checkbox-icon`,this._darkIcon),this.checkboxLabel.textContent=this.dark,this.darkCheckbox.checked=!0)}_updateMode(){this.mode===f?(this._lightCSS.forEach(a=>{a.media='all',a.disabled=!1}),this._darkCSS.forEach(a=>{a.media=a.dataset.originalMedia,a.disabled=!0})):(this._darkCSS.forEach(a=>{a.media='all',a.disabled=!1}),this._lightCSS.forEach(a=>{a.media=a.dataset.originalMedia,a.disabled=!0}))}_showPermanentAside(){this.permanentAside.style.visibility='visible',a.setTimeout(()=>{this.permanentAside.style.visibility='hidden'},3e3)}}a.customElements.define('dark-mode-toggle',j)})(window,document,window.localStorage,'(prefers-color-scheme: dark)',['(prefers-color-scheme: light)','(prefers-color-scheme: no-preference)']);
