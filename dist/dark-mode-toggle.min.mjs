((a,b,c,d)=>{const e='light',f=(a,b,c=b)=>{Object.defineProperty(a,c,{enumerable:!0,get(){const a=this.getAttribute(b);return null===a?'':a},set(a){this.setAttribute(b,a)}})},g=b.createElement('template');g.innerHTML=`<style>*,::before,::after {box-sizing: border-box;}:host {contain: content;display: block;}:host([hidden]) {display: none;}form {background-color: var(--${'dark-mode-toggle'}-background-color, transparent);color: var(--${'dark-mode-toggle'}-color, inherit);padding: 0;}fieldset {border: none;}legend {font: var(--${'dark-mode-toggle'}-legend-font, inherit);padding: 0;}input,label {cursor: pointer;}label::before {content: "";display: inline-block;background-size: 1rem;background-repeat: no-repeat;height: 1rem;width: 1rem;vertical-align: middle;margin: 0 0.5rem 0 0;}label[dir="rtl"]::before {margin: 0 0 0 0.5rem;}#lightLabel::before {background-image: var(--${'dark-mode-toggle'}-light-icon, none);}#darkLabel::before {filter: var(--${'dark-mode-toggle'}-icon-filter, none);background-image: var(--${'dark-mode-toggle'}-dark-icon, none);}#checkboxLabel::before {background-image: var(--${'dark-mode-toggle'}-checkbox-icon, none);}label {padding: 0.15rem;font: var(--${'dark-mode-toggle'}-label-font, inherit);}input {opacity: 0;position: absolute;}input:focus + label {outline: rgb(229, 151, 0) auto 5px;outline: -webkit-focus-ring-color auto 5px;}input:checked + label {background-color: var(--${'dark-mode-toggle'}-active-mode-background-color, transparent);}input:checked + label::before {background-color: var(--${'dark-mode-toggle'}-active-mode-background-color, transparent);border-radius: 1rem;}input:checked + #checkboxLabel::before {filter: var(--${'dark-mode-toggle'}-icon-filter, none);}</style><form id="theme"><fieldset><legend id="legend"></legend><input id="lightRadio" name="mode" type="radio"><label id="lightLabel" for="lightRadio"></label><input id="darkRadio" name="mode" type="radio"><label id="darkLabel" for="darkRadio"></label><input id="darkCheckbox" name="mode" type="checkbox"><label id="checkboxLabel" for="darkCheckbox"></label></fieldset></form>`;class h extends HTMLElement{static get observedAttributes(){return['mode','appearance','legend',e,'dark']}constructor(){super(),f(this,'mode'),f(this,'appearance'),f(this,'legend'),f(this,e),f(this,'dark'),this._darkCSS=null,this._lightCSS=null,b.addEventListener('modechange',a=>{this.mode=a.detail.mode;const b=this.mode==='dark';this.darkCheckbox.checked=b,this.darkRadio.checked=b,this.lightRadio.checked=!b}),this._initializeDOM()}_initializeDOM(){const f=this.attachShadow({mode:'closed'});f.appendChild(g.content.cloneNode(!0)),this._darkCSS=b.querySelectorAll(`link[rel="stylesheet"][media="${c}"]`),this._darkCSS.forEach(a=>a.dataset.originalMedia=a.media),this._lightCSS=document.querySelectorAll(d.map(a=>`link[rel="stylesheet"][media*="${a}"]`).join(', ')),this._lightCSS.forEach(a=>a.dataset.originalMedia=a.media),this.lightRadio=f.querySelector('#lightRadio'),this.lightLabel=f.querySelector('#lightLabel'),this.darkRadio=f.querySelector('#darkRadio'),this.darkLabel=f.querySelector('#darkLabel'),this.darkCheckbox=f.querySelector('#darkCheckbox'),this.checkboxLabel=f.querySelector('#checkboxLabel'),this.legendLabel=f.querySelector('#legend'),this._lightIcon=a.getComputedStyle(this.lightLabel,':before').getPropertyValue('background-image'),this._darkIcon=a.getComputedStyle(this.darkLabel,':before').getPropertyValue('background-image');const h=a.matchMedia('(prefers-color-scheme)').matches;h&&(a.matchMedia(d[0]).matches||a.matchMedia(d[1]).matches?(this.lightRadio.checked=!0,this.mode=e):a.matchMedia(c).matches&&(this.darkRadio.checked=!0,this.darkCheckbox.checked=!0,this.mode='dark')),this.mode||(this.lightRadio.checked=!0,this.mode=e),this.appearance||(this.appearance='toggle'),this._updateAppearance(),this._updateCheckbox(),[this.lightRadio,this.darkRadio].forEach(a=>{a.addEventListener('change',()=>{this.darkCheckbox.checked=this.darkRadio.checked,this.mode=this.lightRadio.checked?e:'dark',this._dispatchEvent()})}),this.darkCheckbox.addEventListener('change',()=>{this.darkRadio.checked=this.darkCheckbox.checked,this.lightRadio.checked=!this.darkCheckbox.checked,this.mode=this.darkCheckbox.checked?'dark':e,this._dispatchEvent()})}attributeChangedCallback(a,b,c){if(a==='mode'){if(c!==e&&c!=='dark')throw new RangeError(`Allowed values: "${e}" and "${'dark'}".`);this._updateMode()}else if(a==='appearance'){if(c!=='toggle'&&c!=='switch')throw new RangeError('Allowed values: "${TOGGLE}" and "${SWITCH}".');this._updateAppearance()}else'legend'===a?this.legendLabel.textContent=c:a===e?(this.lightLabel.textContent=c,this.mode===e&&(this.checkboxLabel.textContent=c)):'dark'===a&&(this.darkLabel.textContent=c,'dark'===this.mode&&(this.checkboxLabel.textContent=c))}_dispatchEvent(){this.dispatchEvent(new CustomEvent('modechange',{bubbles:!0,composed:!0,detail:{mode:this.mode}}))}_updateAppearance(){const a=this.appearance==='toggle';this.lightRadio.hidden=a,this.lightLabel.hidden=a,this.darkRadio.hidden=a,this.darkLabel.hidden=a,this.darkCheckbox.hidden=!a,this.checkboxLabel.hidden=!a}_updateCheckbox(){this.mode===e?(this.checkboxLabel.style.setProperty(`--${'dark-mode-toggle'}-checkbox-icon`,this._lightIcon),this.checkboxLabel.textContent=this.light):(this.checkboxLabel.style.setProperty(`--${'dark-mode-toggle'}-checkbox-icon`,this._darkIcon),this.checkboxLabel.textContent=this.dark)}_updateMode(){this._updateCheckbox(),this.mode===e?(this._lightCSS.forEach(a=>{a.media='all',a.disabled=!1}),this._darkCSS.forEach(a=>{a.media=a.dataset.originalMedia,a.disabled=!0})):(this._darkCSS.forEach(a=>{a.media='all',a.disabled=!1}),this._lightCSS.forEach(a=>{a.media=a.dataset.originalMedia,a.disabled=!0}))}}a.customElements.define('dark-mode-toggle',h)})(window,document,'(prefers-color-scheme: dark)',['(prefers-color-scheme: light)','(prefers-color-scheme: no-preference)']);
